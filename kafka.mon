using com.softwareag.connectivity.ConnectivityPlugins;


@com.softwareag.connectivity.ExtraFieldsDict("tweet_data")
event TwitterEvent {
	string text;
	string source;
	optional<string> in_reply_to_screen_name;
	boolean retweeted;
	boolean is_quote_status;
	any user;
    dictionary<any,any> tweet_data;
}




monitor Receiver {
	constant string KAFKA_CHANNEL := "kafka:tweets";
	constant string ignore_words := "that they this than it's &amp; about again want were when with wont your there their these some";

	dictionary < string , integer > wordcounts;

	action onload() {
		monitor.subscribe(KAFKA_CHANNEL);
		
		on all TwitterEvent() as e {			

			// now we can store the words for later 
			e.text := e.text.replaceAll("(","").replaceAll(")","").replaceAll("\"","").replaceAll(",","").replaceAll("'","");
			e.text := e.text.toLower().ltrim().rtrim();
			sequence<string> tweet_words := " \n\t".tokenize(e.text);
			string word;
			for word in tweet_words {
				if ( word.length() > 3 and word.find("@") = -1 and word.find("http") = -1 and ignore_words.find(word) = -1 ) {
					if wordcounts.hasKey(word) {
						wordcounts[word] := wordcounts[word] + 1;
					} else {
						wordcounts.add( word , 1 );
					}
				}
			}


			//string screen_name := <string> e.user.getEntry("screen_name");
			//string rname := "";
			//ifpresent e.in_reply_to_screen_name as rname {
			//	log "(" + screen_name  + " replying to " + rname + ") " + e.text at INFO;
			//}else {
			//	log "(" + screen_name  + ") " + e.text at INFO;
			//}
			string key;
			log "---------" at INFO;
			for key in wordcounts.keys() {
				if( wordcounts[key] > 10 ) {
					log key + " : " + wordcounts[key].toString() at INFO;
				}
			}
		}

	}
}